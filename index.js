// Generated by LiveScript 1.2.0
angular.module('ui-morph', []).directive('uiMorph', function($compile, $interval){
  return {
    restrict: 'A',
    scope: {
      uiMorph: '@'
    },
    link: function(s, e, a){
      s.des = {};
      s.cur = {};
      s.src = {};
      s.ani = {};
      s.time = {};
      return s.$watch('uiMorph', function(v){
        var u, dur, k;
        u = s.$eval(v);
        dur = u.dur || 1000;
        return (function(){
          var ref$, results$ = [];
          for (k in ref$ = s.$eval(v)) {
            v = ref$[k];
            results$.push([k, v]);
          }
          return results$;
        }()).map(function(it){
          if (it[0] === 'dur') {
            return;
          }
          s.des[it[0]] = s.src[it[0]] = s.cur[it[0]] = s.$parent.$eval(it[1]);
          return function(d){
            return s.$parent.$watch(d[1], function(it){
              s.des[d[0]] = it;
              s.src[d[0]] = s.cur[d[0]];
              if (s.ani[d[0]]) {
                $interval.cancel(s.ani[d[0]]);
              }
              if (s.cur[d[0]] === s.des[this.cur]) {
                return;
              }
              s.time[d[0]] = new Date().getTime();
              return s.ani[d[0]] = $interval(function(){
                var ct, ratio, ref$;
                ct = new Date().getTime();
                ratio = (ref$ = (ct - s.time[d[0]]) / dur) < 1 ? ref$ : 1;
                s.cur[d[0]] = s.src[d[0]] + (s.des[d[0]] - s.src[d[0]]) * ratio;
                return e.attr(d[0], s.cur[d[0]]);
              });
            });
          }(it);
        });
      });
    }
  };
}).controller('mainCtrl', function($scope, $interval){
  $scope.b = 0;
  $scope.c = 1;
  return $interval(function(){
    return $scope.b = Math.random() * 100;
  }, 1000);
});